# nginx 설정 파일 (C:\nginx\conf\nginx.conf)
# Express API 서버와 연동하여 클라이언트 + API 서빙

# 워커 프로세스 수 (CPU 코어 수와 맞추는 것이 일반적)
worker_processes  auto;

# 이벤트 블록 - 연결 처리 설정
events {
    worker_connections  1024;  # 워커당 최대 동시 연결 수
}

# HTTP 블록 - 웹서버 메인 설정
http {
    # MIME 타입 설정 포함
    include       mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    more_clear_headers Server;
    
    # 파일 전송 최적화
    sendfile        on;
    keepalive_timeout  65;
    
    # 업로드 파일 크기 제한 (100MB까지 허용)
    client_max_body_size 100m;
    
    # ========================================
    # 성능 최적화 옵션 (http 블록 레벨)
    # ========================================
    
    # gzip 압축 활성화 (대역폭 절약)
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # ========================================
    # 요청 제한 설정
    # ========================================
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=300r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    
    # 메인 서버 블록
    server {
        # 80포트에서 수신
        listen       80;
        server_name  localhost;
        
        # ========================================
        # 🔒 IP 제한 설정 (맨 위에 배치)
        # ========================================
        
        # 내부 네트워크만 허용
        allow 192.168.0.0/16;    # 192.168.x.x 대역
        #allow 10.0.0.0/8;        # 10.x.x.x 대역  
        allow 172.16.0.0/12;     # 172.16-31.x.x 대역
        allow 127.0.0.1;         # 로컬호스트
        deny all;                # 외부 IP 모두 차단
        
        # 또는 특정 IP만 허용하려면 위 주석 처리하고 아래 사용:
        # allow 192.168.10.50;   # 사무실 PC
        # allow 192.168.1.101;   # 관리자 PC
        # allow 127.0.0.1;       # 로컬호스트
        # deny all;              # 나머지 차단
        
        # ========================================
        # 🔧 중요: 업로드 파일 먼저 처리 (우선순위 높음)
        # ========================================
        location /uploads/ {
            alias C:/jamtori/server/uploads/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
        
        # ========================================
        # API 프록시 (Express 서버로 전달)
        # ========================================
        location /api/ {
            # 일반 API 요청 제한
            limit_req zone=api burst=30 nodelay;
            
            # Express API 서버(4000포트)로 프록시
            proxy_pass http://127.0.0.1:4000/api/;
            
            # 프록시 헤더 설정 (클라이언트 정보 전달)
            proxy_set_header Host $host;                    # 호스트명 전달
            proxy_set_header X-Real-IP $remote_addr;        # 실제 클라이언트 IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 프록시 체인 IP
            proxy_set_header X-Forwarded-Proto $scheme;     # HTTP/HTTPS 프로토콜
        }
        
        # ========================================
        # 로그인 API 특별 제한
        # ========================================
        location /api/auth/login {
            # 로그인 시도 제한 (무차별 대입 공격 방지)
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://127.0.0.1:4000/api/auth/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ========================================
        # 관리자 API 더 엄격한 제한
        # ========================================
        location /api/admin/ {
            # 관리자 API는 더 특정 IP만 허용 (필요시 주석 해제)
            # allow 192.168.1.100;   # 관리자 PC만
            # allow 127.0.0.1;       # 로컬호스트
            # deny all;              # 나머지 차단
            
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://127.0.0.1:4000/api/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ========================================
        # 🔧 수정: 클라이언트 정적 파일만 캐싱 (uploads 제외)
        # ========================================
        location ~* ^(?!/uploads/).*\.(css|js|woff|woff2|ttf|eot)$ {
            root   C:/jamtori/client/dist;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # ========================================
        # 클라이언트 정적 파일 서빙 (React 앱)
        # ========================================
        location / {
            # 일반 페이지 요청 제한
            limit_req zone=general burst=20 nodelay;
            
            root   C:/jamtori/client/dist;
            index  index.html index.htm;
            
            # SPA(Single Page Application) 라우팅 지원
            # 존재하지 않는 경로는 모두 index.html로 리다이렉트
            try_files $uri $uri/ /index.html;
        }
        
        # ========================================
        # 에러 페이지 설정
        # ========================================
        # 500 에러 시 표시할 페이지
        error_page   500 501 502 503 504  /50x.html;
        location = /errors/50x.html {
            root C:/jamtori/errors;  # C:\nginx\html\50x.html 파일 사용
            internal;
        }
        
        # 400 에러 시 커스텀 페이지
        error_page 400 401 402 403 404 /errors/40x.html;
        location = /errors/40x.html {
            root C:/jamtori/errors;
            internal;
        }
        
    } # ✅ server 블록 종료
} # ✅ http 블록 종료

# ========================================
# 🔧 수정 사항 설명
# ========================================
#
# 기존 문제 해결:
# - 정적 파일 캐싱 설정이 /uploads/ 경로의 이미지도 client/dist에서 찾음
# - nginx location 우선순위 때문에 확장자 기반 설정이 먼저 적용됨
#
# 새로운 보안 기능 추가:
# 1. IP 제한: 내부 네트워크만 허용
# 2. 요청 제한: 무차별 대입 공격 방지
# 3. 로그인 API 특별 제한
# 4. 관리자 API 추가 보안
#
# 동작 흐름:
# - IP 체크 → 허용된 IP만 통과
# - /uploads/images/test.jpg → uploads location (서버 파일)
# - /assets/index.js → 정적 파일 캐싱 (클라이언트 파일)
# - /api/* → Express 프록시 (요청 제한 적용)
# - / → React 앱 (요청 제한 적용)
#
# 보안 레벨:
# - 일반 페이지: 30회/분
# - API: 60회/분
# - 로그인: 5회/분
# - 관리자 API: 추가 IP 제한 가능
#
# ========================================
